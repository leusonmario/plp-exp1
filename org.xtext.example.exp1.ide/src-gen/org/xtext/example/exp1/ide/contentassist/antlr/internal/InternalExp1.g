/*
 * generated by Xtext 2.9.2
 */
grammar InternalExp1;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.exp1.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.exp1.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.exp1.services.Exp1GrammarAccess;

}
@parser::members {
	private Exp1GrammarAccess grammarAccess;

	public void setGrammarAccess(Exp1GrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleExp1
entryRuleExp1
:
{ before(grammarAccess.getExp1Rule()); }
	 ruleExp1
{ after(grammarAccess.getExp1Rule()); } 
	 EOF 
;

// Rule Exp1
ruleExp1 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExp1Access().getExpressoesAssignment()); }
		(rule__Exp1__ExpressoesAssignment)*
		{ after(grammarAccess.getExp1Access().getExpressoesAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressao
entryRuleExpressao
:
{ before(grammarAccess.getExpressaoRule()); }
	 ruleExpressao
{ after(grammarAccess.getExpressaoRule()); } 
	 EOF 
;

// Rule Expressao
ruleExpressao 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressaoAccess().getExpCondicionalOrParserRuleCall()); }
		ruleExpCondicionalOr
		{ after(grammarAccess.getExpressaoAccess().getExpCondicionalOrParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpCondicionalOr
entryRuleExpCondicionalOr
:
{ before(grammarAccess.getExpCondicionalOrRule()); }
	 ruleExpCondicionalOr
{ after(grammarAccess.getExpCondicionalOrRule()); } 
	 EOF 
;

// Rule ExpCondicionalOr
ruleExpCondicionalOr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpCondicionalOrAccess().getGroup()); }
		(rule__ExpCondicionalOr__Group__0)
		{ after(grammarAccess.getExpCondicionalOrAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpCondicionalAnd
entryRuleExpCondicionalAnd
:
{ before(grammarAccess.getExpCondicionalAndRule()); }
	 ruleExpCondicionalAnd
{ after(grammarAccess.getExpCondicionalAndRule()); } 
	 EOF 
;

// Rule ExpCondicionalAnd
ruleExpCondicionalAnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpCondicionalAndAccess().getGroup()); }
		(rule__ExpCondicionalAnd__Group__0)
		{ after(grammarAccess.getExpCondicionalAndAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpIgualdade
entryRuleExpIgualdade
:
{ before(grammarAccess.getExpIgualdadeRule()); }
	 ruleExpIgualdade
{ after(grammarAccess.getExpIgualdadeRule()); } 
	 EOF 
;

// Rule ExpIgualdade
ruleExpIgualdade 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpIgualdadeAccess().getGroup()); }
		(rule__ExpIgualdade__Group__0)
		{ after(grammarAccess.getExpIgualdadeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpAritmetica
entryRuleExpAritmetica
:
{ before(grammarAccess.getExpAritmeticaRule()); }
	 ruleExpAritmetica
{ after(grammarAccess.getExpAritmeticaRule()); } 
	 EOF 
;

// Rule ExpAritmetica
ruleExpAritmetica 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpAritmeticaAccess().getGroup()); }
		(rule__ExpAritmetica__Group__0)
		{ after(grammarAccess.getExpAritmeticaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpConcatenacao
entryRuleExpConcatenacao
:
{ before(grammarAccess.getExpConcatenacaoRule()); }
	 ruleExpConcatenacao
{ after(grammarAccess.getExpConcatenacaoRule()); } 
	 EOF 
;

// Rule ExpConcatenacao
ruleExpConcatenacao 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpConcatenacaoAccess().getGroup()); }
		(rule__ExpConcatenacao__Group__0)
		{ after(grammarAccess.getExpConcatenacaoAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpUnaria
entryRuleExpUnaria
:
{ before(grammarAccess.getExpUnariaRule()); }
	 ruleExpUnaria
{ after(grammarAccess.getExpUnariaRule()); } 
	 EOF 
;

// Rule ExpUnaria
ruleExpUnaria 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpUnariaAccess().getAlternatives()); }
		(rule__ExpUnaria__Alternatives)
		{ after(grammarAccess.getExpUnariaAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValorConcreto
entryRuleValorConcreto
:
{ before(grammarAccess.getValorConcretoRule()); }
	 ruleValorConcreto
{ after(grammarAccess.getValorConcretoRule()); } 
	 EOF 
;

// Rule ValorConcreto
ruleValorConcreto 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValorConcretoAccess().getAlternatives()); }
		(rule__ValorConcreto__Alternatives)
		{ after(grammarAccess.getValorConcretoAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpAritmetica__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpAritmeticaAccess().getPlusSignKeyword_1_0_0()); }
		'+'
		{ after(grammarAccess.getExpAritmeticaAccess().getPlusSignKeyword_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpAritmeticaAccess().getHyphenMinusKeyword_1_0_1()); }
		'-'
		{ after(grammarAccess.getExpAritmeticaAccess().getHyphenMinusKeyword_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpUnaria__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpUnariaAccess().getGroup_0()); }
		(rule__ExpUnaria__Group_0__0)
		{ after(grammarAccess.getExpUnariaAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpUnariaAccess().getGroup_1()); }
		(rule__ExpUnaria__Group_1__0)
		{ after(grammarAccess.getExpUnariaAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpUnariaAccess().getGroup_2()); }
		(rule__ExpUnaria__Group_2__0)
		{ after(grammarAccess.getExpUnariaAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getExpUnariaAccess().getValorConcretoParserRuleCall_3()); }
		ruleValorConcreto
		{ after(grammarAccess.getExpUnariaAccess().getValorConcretoParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValorConcreto__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValorConcretoAccess().getVALORINTEIROTerminalRuleCall_0()); }
		RULE_VALORINTEIRO
		{ after(grammarAccess.getValorConcretoAccess().getVALORINTEIROTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getValorConcretoAccess().getVALORBOOLEANOTerminalRuleCall_1()); }
		RULE_VALORBOOLEANO
		{ after(grammarAccess.getValorConcretoAccess().getVALORBOOLEANOTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getValorConcretoAccess().getVALORSTRINGTerminalRuleCall_2()); }
		RULE_VALORSTRING
		{ after(grammarAccess.getValorConcretoAccess().getVALORSTRINGTerminalRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpCondicionalOr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpCondicionalOr__Group__0__Impl
	rule__ExpCondicionalOr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpCondicionalOr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpCondicionalOrAccess().getExpCondicionalAndParserRuleCall_0()); }
	ruleExpCondicionalAnd
	{ after(grammarAccess.getExpCondicionalOrAccess().getExpCondicionalAndParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpCondicionalOr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpCondicionalOr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpCondicionalOr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpCondicionalOrAccess().getGroup_1()); }
	(rule__ExpCondicionalOr__Group_1__0)*
	{ after(grammarAccess.getExpCondicionalOrAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpCondicionalOr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpCondicionalOr__Group_1__0__Impl
	rule__ExpCondicionalOr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpCondicionalOr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpCondicionalOrAccess().getOrKeyword_1_0()); }
	'or'
	{ after(grammarAccess.getExpCondicionalOrAccess().getOrKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpCondicionalOr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpCondicionalOr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpCondicionalOr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpCondicionalOrAccess().getExpCondicionalAndParserRuleCall_1_1()); }
	ruleExpCondicionalAnd
	{ after(grammarAccess.getExpCondicionalOrAccess().getExpCondicionalAndParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpCondicionalAnd__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpCondicionalAnd__Group__0__Impl
	rule__ExpCondicionalAnd__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpCondicionalAnd__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpCondicionalAndAccess().getExpIgualdadeParserRuleCall_0()); }
	ruleExpIgualdade
	{ after(grammarAccess.getExpCondicionalAndAccess().getExpIgualdadeParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpCondicionalAnd__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpCondicionalAnd__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpCondicionalAnd__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpCondicionalAndAccess().getGroup_1()); }
	(rule__ExpCondicionalAnd__Group_1__0)*
	{ after(grammarAccess.getExpCondicionalAndAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpCondicionalAnd__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpCondicionalAnd__Group_1__0__Impl
	rule__ExpCondicionalAnd__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpCondicionalAnd__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpCondicionalAndAccess().getAndKeyword_1_0()); }
	'and'
	{ after(grammarAccess.getExpCondicionalAndAccess().getAndKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpCondicionalAnd__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpCondicionalAnd__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpCondicionalAnd__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpCondicionalAndAccess().getExpIgualdadeParserRuleCall_1_1()); }
	ruleExpIgualdade
	{ after(grammarAccess.getExpCondicionalAndAccess().getExpIgualdadeParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpIgualdade__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpIgualdade__Group__0__Impl
	rule__ExpIgualdade__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpIgualdade__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpIgualdadeAccess().getExpAritmeticaParserRuleCall_0()); }
	ruleExpAritmetica
	{ after(grammarAccess.getExpIgualdadeAccess().getExpAritmeticaParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpIgualdade__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpIgualdade__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpIgualdade__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpIgualdadeAccess().getGroup_1()); }
	(rule__ExpIgualdade__Group_1__0)?
	{ after(grammarAccess.getExpIgualdadeAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpIgualdade__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpIgualdade__Group_1__0__Impl
	rule__ExpIgualdade__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpIgualdade__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpIgualdadeAccess().getEqualsSignEqualsSignKeyword_1_0()); }
	'=='
	{ after(grammarAccess.getExpIgualdadeAccess().getEqualsSignEqualsSignKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpIgualdade__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpIgualdade__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpIgualdade__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpIgualdadeAccess().getExpAritmeticaParserRuleCall_1_1()); }
	ruleExpAritmetica
	{ after(grammarAccess.getExpIgualdadeAccess().getExpAritmeticaParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpAritmetica__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpAritmetica__Group__0__Impl
	rule__ExpAritmetica__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpAritmetica__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpAritmeticaAccess().getExpConcatenacaoParserRuleCall_0()); }
	ruleExpConcatenacao
	{ after(grammarAccess.getExpAritmeticaAccess().getExpConcatenacaoParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpAritmetica__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpAritmetica__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpAritmetica__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpAritmeticaAccess().getGroup_1()); }
	(rule__ExpAritmetica__Group_1__0)*
	{ after(grammarAccess.getExpAritmeticaAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpAritmetica__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpAritmetica__Group_1__0__Impl
	rule__ExpAritmetica__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpAritmetica__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpAritmeticaAccess().getAlternatives_1_0()); }
	(rule__ExpAritmetica__Alternatives_1_0)
	{ after(grammarAccess.getExpAritmeticaAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpAritmetica__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpAritmetica__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpAritmetica__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpAritmeticaAccess().getExpConcatenacaoParserRuleCall_1_1()); }
	ruleExpConcatenacao
	{ after(grammarAccess.getExpAritmeticaAccess().getExpConcatenacaoParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpConcatenacao__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpConcatenacao__Group__0__Impl
	rule__ExpConcatenacao__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpConcatenacao__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpConcatenacaoAccess().getExpUnariaParserRuleCall_0()); }
	ruleExpUnaria
	{ after(grammarAccess.getExpConcatenacaoAccess().getExpUnariaParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpConcatenacao__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpConcatenacao__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpConcatenacao__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpConcatenacaoAccess().getGroup_1()); }
	(rule__ExpConcatenacao__Group_1__0)*
	{ after(grammarAccess.getExpConcatenacaoAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpConcatenacao__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpConcatenacao__Group_1__0__Impl
	rule__ExpConcatenacao__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpConcatenacao__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpConcatenacaoAccess().getPlusSignPlusSignKeyword_1_0()); }
	'++'
	{ after(grammarAccess.getExpConcatenacaoAccess().getPlusSignPlusSignKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpConcatenacao__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpConcatenacao__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpConcatenacao__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpConcatenacaoAccess().getExpUnariaParserRuleCall_1_1()); }
	ruleExpUnaria
	{ after(grammarAccess.getExpConcatenacaoAccess().getExpUnariaParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpUnaria__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpUnaria__Group_0__0__Impl
	rule__ExpUnaria__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpUnaria__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpUnariaAccess().getHyphenMinusKeyword_0_0()); }
	'-'
	{ after(grammarAccess.getExpUnariaAccess().getHyphenMinusKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpUnaria__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpUnaria__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpUnaria__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpUnariaAccess().getExpressaoParserRuleCall_0_1()); }
	ruleExpressao
	{ after(grammarAccess.getExpUnariaAccess().getExpressaoParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpUnaria__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpUnaria__Group_1__0__Impl
	rule__ExpUnaria__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpUnaria__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpUnariaAccess().getNotKeyword_1_0()); }
	'not'
	{ after(grammarAccess.getExpUnariaAccess().getNotKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpUnaria__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpUnaria__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpUnaria__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpUnariaAccess().getExpressaoParserRuleCall_1_1()); }
	ruleExpressao
	{ after(grammarAccess.getExpUnariaAccess().getExpressaoParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpUnaria__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpUnaria__Group_2__0__Impl
	rule__ExpUnaria__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpUnaria__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpUnariaAccess().getLengthKeyword_2_0()); }
	'length'
	{ after(grammarAccess.getExpUnariaAccess().getLengthKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpUnaria__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpUnaria__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpUnaria__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpUnariaAccess().getExpressaoParserRuleCall_2_1()); }
	ruleExpressao
	{ after(grammarAccess.getExpUnariaAccess().getExpressaoParserRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exp1__ExpressoesAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExp1Access().getExpressoesExpressaoParserRuleCall_0()); }
		ruleExpressao
		{ after(grammarAccess.getExp1Access().getExpressoesExpressaoParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_VALORINTEIRO : '1'..'9' ('0'..'9')*;

RULE_VALORBOOLEANO : ('true'|'false');

RULE_VALORSTRING : ('a'..'z')?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
